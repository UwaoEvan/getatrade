// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../app/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             Int         @id @default(autoincrement())
  username       String
  email          String      @unique
  hashedPassword String
  role           String?
  location       String?
  about          String?
  job            Job[]
  interest       Interest[]
  shortlist      Shortlist[]
  payments       Payments[]

  @@map("user")
}

model Job {
  id          String      @id @default(uuid())
  title       String
  description String
  category    String
  project     String
  createdAt   DateTime    @default(now())
  location    String
  userId      Int
  interested  Int?        @default(0)
  shortlisted Int?        @default(0)
  user        User        @relation(fields: [userId], references: [id])
  interest    Interest[]
  shortlist   Shortlist[]
  payments    Payments[]

  @@map("job")
}

model Interest {
  id        String   @id @default(uuid())
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  jobId     String
  job       Job      @relation(fields: [jobId], references: [id])

  @@map("interest")
}

model Shortlist {
  id        String   @id @default(uuid())
  jobId     String
  userId    Int
  paid      Boolean? @default(false)
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])
  job       Job      @relation(fields: [jobId], references: [id])

  @@map("shortlist")
}

model Payments {
  id          String  @id @default(uuid())
  amount      Float   @default(0.00)
  description String
  userId      Int
  jobId       String
  status      String? @default("Not paid")
  job         Job     @relation(fields: [jobId], references: [id])
  user        User    @relation(fields: [userId], references: [id])

  @@map("payments")
}
